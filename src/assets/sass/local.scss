/*-- -------------------------- -->
<---       Meet The Team        -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #meet-team-1765 {
        padding: var(--sectionPadding);
        background-color: #1a1a1a;
        position: relative;
        z-index: 1;
        overflow: hidden;

        .cs-container {
            width: 100%;
            max-width: calc(1280/16 * 1rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6.5vw, 4rem);
        }

        .cs-content {
            /* set text align to center if content needs to be center aligned */
            text-align: left;
            width: 100%;
            display: flex;
            flex-direction: column;
            align-items: flex-start;
        }
        
        .cs-flex-wrapper {
            max-width: calc(600/16 * 1rem);
            /* lets the div's contents act as though it doesn't exist and can be children of the next surrounding parent div, in this case the cs-content. That way we can place the button under the cs-wrapper on mobile, but bring it back under the header on tablet */
            display: contents;
        }

        .cs-title {
            margin: 0;
            /* 16px - 32px */
            margin-bottom: clamp(1rem, 3vw, 2rem);
            color: var(--bodyTextColorWhite);
        }

        .cs-wrapper {
            max-width: calc(632/16 * 1rem);
        }

        .cs-text {
            margin: 0 0 calc(32/16 * 1rem) 0;
            color: var(--bodyTextColorWhite);
            opacity: .8;
        }

        .cs-button-solid {
            font-size: calc(16/16 * 1rem);
            font-weight: 700;
            /* 46px - 56px */
            line-height: clamp(2.875rem, 5.5vw, 3.5rem);
            text-align: center;
            text-decoration: none;
            min-width: calc(150/16 * 1rem);
            margin: 0;
            margin-top: calc(32/16 * 1rem);
            /* prevents padding from adding to the width */
            box-sizing: border-box;
            padding: 0 calc(24/16 * 1rem);
            color: #fff;
            background-color: var(--primary);
            display: inline-block;
            position: relative;
            z-index: 1;

            &:before {
                content: "";
                width: 0%;
                height: 100%;
                background: #000;
                opacity: 1;
                position: absolute;
                top: 0;
                left: 0;
                z-index: -1;
                transition: width 0.3s;
            }

            &:hover {
                &:before {
                    width: 100%;
                }
            }
        }

        .cs-button-solid {
            margin: 0;
            display: inline-block;
            order: 2;
        }

        .cs-text {
            max-width: calc(640/16 * 1rem);
            margin-bottom: calc(24/16 * 1rem);
            position: relative;
            z-index: 1;
        }

        .cs-ul {
            max-width: calc(630/16 * 1rem);
            margin: 0 0 calc(32/16 * 1rem) 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            gap: calc(12/16 * 1rem);
        }

        .cs-li {
            font-size: var(--bodyFontSize);
            list-style: none;
            line-height: 1.5em;
            width: 100%;
            color: var(--bodyTextColorWhite);
            opacity: .8;
            display: flex;
            justify-content: flex-start;
            align-items: center;
            gap: calc(8/16 * 1rem);
        }

        .cs-check-icon {
            width: calc(24/16 * 1rem);
            height: auto;
            /* adds extra space between the icon and top of parent so it's more centered */
            margin-top: 1px;
            display: block;
        }

        .cs-card-group {
            width: 100%;
            margin: 0;
            padding: 0;
            display: grid;
            flex-direction: column;
            grid-template-columns: repeat(12, 1fr);
            /* 16px - 20px */
            gap: calc(24/16 * 1rem);
            position: relative;
        }

        .cs-item {
            list-style: none;
            width: 100%;
            display: flex;
            flex-direction: column;
            justify-content: flex-end;
            align-items: center;
            grid-column: span 12;
            /* 16px - 20px */
            gap: clamp(1rem, 2vw, 1.25rem);
            position: relative;

            &:hover {
                .cs-picture {
                    img {
                        opacity: .4;
                        transform: scale(1.2);
                    }
                }

                .cs-link {
                    opacity: 1;
                    transform: translateY(0);
    
                    &:hover {
                        /* we need to add the hover styles for the cs-link inside the cs-item hover for specifcity. There's a transform none on the cs-link when we hover over the cs-item, so for the transform to work when we hover over the cs-link, we add it while the hover is active on the cs-item. This allows it to be more specific and override the transform 0 it adds to the cs-link */
                        transform: scale(1.15);
                        transition: transform .3s;
                        transition-delay: 0;
                    }
                }

                .cs-job {
                    color: var(--primary);
                }
            }
        }

        .cs-image-group {
            width: 100%;
            height: auto;
            margin: 0;
            position: relative;
            z-index: 1;
            aspect-ratio: 0.91691395;
            flex: 1 0 0;
        }

        .cs-picture {
            width: 100%;
            height: 100%;
            /* removed at tablet */
            aspect-ratio: 328/260;
            background-color: #000;
            /* clips the img corners */
            /* clips img tag from overflowing it on hover */
            display: block;
            position: relative;
            overflow: hidden;

            img {
                width: 100%;
                height: 100%;
                object-fit: cover;
                /* makes sure the top of the image is at the top of the parent, heads won't get cut off this way */
                object-position: top;
                position: absolute;
                top: 0;
                left: 0;
                transition: transform 0.7s, opacity .3s;
            }
        }

        .cs-social {
            display: flex;
            flex-direction: column;
            align-items: flex-end;
            gap: calc(8/16 * 1rem);
            position: absolute;
            top: calc(16/16 * 1rem);
            right: calc(16/16 * 1rem);
            z-index: 1;
        }

        .cs-link {
            width: calc(40/16 * 1rem);
            height: calc(40/16 * 1rem);
            padding: calc(8/16 * 1rem);
            background-color: #F7F7F7;
            display: flex;
            justify-content: center;
            align-items: center;
            opacity: 0;
            transform: translateY(-1rem);
            transition: transform 0.6s, opacity 0.6s;

            &:nth-of-type(2) {
                transition-delay: .08s;
            }

            &:nth-of-type(3) {
                transition-delay: .16s;
            }
        }

        .cs-icon {
            width: calc(20/16 * 1rem);
            height: auto;
            display: block;
        }

        .cs-info {
            width: 100%;
            /* prevents padding and border from affecting height and width */
            box-sizing: border-box;
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: calc(8/16 * 1rem);
            transition: background-color 0.3s;
        }

        .cs-name {
            font-size: calc(20/16 * 1rem);
            font-weight: 700;
            line-height: 1.2em;
            text-transform: uppercase;
            margin: 0;
            color: var(--bodyTextColorWhite);
            display: block;
            transition: color 0.3s;
        }

        .cs-job {
            font-size: calc(16/16 * 1rem);
            font-weight: 700;
            line-height: 1.2em;
            margin: 0;
            color: var(--bodyTextColorWhite);
            opacity: .8;
            display: block;
            transition: color 0.3s;
        }
    }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #meet-team-1765 {
        .cs-container {
            max-width: calc(1720/16 * 1rem);
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
        }

        .cs-content {
            text-align: left;
            max-width: calc(1280/16 * 1rem);
            height: auto;
            flex-direction: row;
            justify-content: space-between;
            align-items: flex-start;
            gap: calc(48/16 * 1rem);
            columns: 2;
        }

        .cs-flex-wrapper {
            width: 40vw;
            display: block;
            /* prevents flexbox from squishing it */
            flex: none;
        }

        .cs-ul {
            margin: 0;
        }

        .cs-card-group {
            /* 16px - 20px */
            column-gap: clamp(1rem, 2vw, 1.25rem);
            row-gap: calc(40/16 * 1rem);
        }

        .cs-item {
            grid-column: span 4;
        }

        .cs-picture {
            /* 260px - 440px */
            height: clamp(16.25rem, 33.2vw, 27.5rem);
            aspect-ratio: initial;
        }

    }
}

/* Large Desktop - 1300px */
@media only screen and (min-width: 81.25rem) {
    #meet-team-1765 {
        .cs-ul {
            flex-direction: row;
            flex-wrap: wrap;
        }

        .cs-li {
            width: 48%;
        }

        .cs-card-group {
            grid-template-columns: repeat(10, 1fr);
        }

        .cs-item {
            grid-column: span 2;
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #meet-team-1765 {
            background-color: rgba(8, 32, 50, 0.6);
        }
    }
}
                                